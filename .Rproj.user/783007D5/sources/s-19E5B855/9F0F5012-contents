---
title: "Paper, Server, and Service with R"
subtitle: "@TKU 2020/10/17"
author: "Taichi Wang"
date: ""
output: 
  xaringan::moon_reader:
    css: [default, metropolis, metropolis-fonts]
    nature:
      highlightStyle: github
      highlightLines: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align="center", message = FALSE)
knitr::opts_chunk$set(fig.retina = 3, warning = FALSE, message = FALSE, fig.height=5)
```


class: center, middle

<font size= "10">

**Spatial Analysis**

---

# Taiwan Shape file

一張地圖是由許多的polygons組成，正常狀況不會要求自己畫完整張地圖，
於是就有很多公開免費的圖層可以下載，其中一種常用的圖層檔案格式
就是shape file(.shp).

鄉鎮市區界線(TWD97經緯度)  
[http://data.gov.tw/node/7441](http://data.gov.tw/node/7441)


Read shape file with R

```{r,fig.height=5}
library(maptools)
library(rgeos)
taiwan <- readShapeSpatial(
  "./data/taiwantownshp/TOWN_MOI_1060831.shp" , 
  proj4string = CRS("+proj=longlat +datum=WGS84"))
```

---

```{r fig.height=7}
plot(taiwan)
```

---

# Data foramt

```{r}
class(taiwan)
```
```{r}
mode(taiwan)
```

---

# Deal with Encoding

If you use Windows,...
```{r}
taiwan@data$COUNTYNAME=iconv(
  taiwan@data$COUNTYNAME,"UTF-8")
taiwan@data$TOWNNAME=iconv(
 taiwan@data$TOWNNAME,"UTF-8")
head(taiwan@data)
```

---

# Extract Data from SpatialPolygonsDataFrame

```{r}
taiwan %>% length
```

```{r}
slotNames(taiwan)
head(taiwan@data)
```

---

# Union Polygons

如果純粹只想要縣市層級的圖層

```{r}
unique(taiwan@data$COUNTYNAME)
```

---

```{r}
library(rgeos)
countytaiwan<- gUnaryUnion(taiwan,
  taiwan@data$COUNTYNAME)
plot(countytaiwan)
```

---

class: center, middle

<font size= "10">

**Social Network Analysis**

---


#Network Example: Karate Network
```{r, warning=FALSE, message=FALSE}
library(igraph)
karate <- make_graph("Zachary")
karate
```

---


```{r}
plot(karate)
```

---

# Centrality Measures

```{r  out.width = "80%", echo=FALSE}
knitr::include_graphics("./image/centrality.PNG")
```

---

# Compute Centralities in the Graph

```{r}
dg=degree(karate)
bt=betweenness(karate, v=V(karate), directed = FALSE)
cl=closeness(karate, v=V(karate), "total")
```

# Plot Centrality in the Graph

```{r}
vd=c(rep(1.5,17),rep(-1.5,17))
vlabel=expression(
  V[1],V[2],V[3],V[4],V[5],V[6],V[7],V[8],V[9],V[10],
  V[11],V[12],V[13],V[14],V[15],V[16],V[17],V[18],V[19],
  V[20],V[21],V[22],V[23],V[24],V[25],V[26],V[27],V[28],
  V[29],V[30],V[31],V[32],V[33],V[34])
dg=degree(karate)
drank=rank(-1*dg,ties.method="first")
vc=rev(heat.colors(max(drank)))[drank]
```

---

```{r}
l=read.csv("./data/layoutkarate.csv") %>% as.matrix()
plot(karate, vertex.label=vlabel,
vertex.label.dist=vd,layout=l)
plot(karate, vertex.shape="circle",vertex.label=drank,
  vertex.label.cex=1,edge.width=2,
  vertex.color=vc,layout=l,add=T)
```

---

```{r  out.width = "80%", echo=FALSE}
knitr::include_graphics("./image/karatecentrality.PNG")
```

---

class: center, middle

<font size= "10">

**Database**

---

# Set Config File

```{r}
dbconfig=read.csv("../dbconfig/sql_config_twcc.txt",
                  stringsAsFactors = FALSE)
dbconfig$v1
```

---

# 建立資料庫連線

```{r}
library(RMySQL)
con=dbConnect(MySQL(), dbname = dbconfig[5,2],
    username = dbconfig[3,2], password = dbconfig[4,2],
    host = dbconfig[1,2],port=as.numeric(dbconfig[2,2])
    )
dbListTables(con)
```

# Read and Write table 
```{r}
mtcars=dbReadTable(con, "mtcars")
dbWriteTable(con, "iris", iris, overwrite=T)
dbListTables(con)
```

---

# Deal with Chinese 
```{r}
iduser=dbReadTable(con, "iduser")
iduser
```

---

# set names big5
```{r}
dbSendQuery(con,'SET NAMES big5')
dbSendQuery(con, "set character_set_database = 'big5'")
iduser=dbReadTable(con, "iduser")
iduser
```

---

# set names big5
```{r}
dbSendQuery(con, "set names big5")
dbSendQuery(con, "set character_set_database = 'big5'")
testdata=data.frame(id="3", name="大強")
dbWriteTable(con, "iduser", testdata, append=T,
             row.names=FALSE)
dbDisconnect(con)
```

---

# 連接TWCC S3

```{r}
# 讀取key
s3key=fread("../dbconfig/s3.txt", header = FALSE,
               stringsAsFactors = FALSE)
s3key[,1]
```

```{r}
Sys.setenv("AWS_S3_ENDPOINT" = "s3.twcc.ai",
  "AWS_ACCESS_KEY_ID" = s3key[1,2],
  "AWS_SECRET_ACCESS_KEY" = s3key[2,2])
```

---

```{r}
library("aws.s3")
bucketlist()
get_bucket("tutorial")
```

---

# Read data from s3 bucket

```{r}
s3_iris=s3read_using(FUN = read.csv, 
                     object = "s3://tutorial/iris.csv")
head(s3_iris)
```

---

class: center, middle

<font size= "10">

**opencpu**

---

# plumber example

```{r eval=FALSE}
ocpu_start_server()
```

---

class: center, middle

<font size= "10">

**plumber**

---

# plumber example

- Create plumber api in RStudio
- 執行plumber環境如下

```{r eval=FALSE}
library(plumber)
pr <- plumber::plumb("./tkutest/plumber.R")
pr$run()
```

---

# 加入收集log的機制

設定存放log的目錄
```{r}
# logging
library(logger)

# Specify how logs are written
log_dir <- "logs"
if (!fs::dir_exists(log_dir)) fs::dir_create(log_dir)
log_appender(appender_tee(tempfile("plumber_", log_dir, ".log")))
```

設定空值處理
```{r}
convert_empty <- function(string) {
  if (string == "") {
    "-"
  } else {
    string
  }
}
```

---

# 設定log的輸出格式

```{r}
pr <- plumber::plumb("./tkutest/plumber.R")
pr$registerHooks(
  list(
    preroute = function() {
      # Start timer for log info
      tictoc::tic()
    },
    postroute = function(req, res) {
      end <- tictoc::toc(quiet = TRUE)
      # Log details about the request and the response
      # TODO: Sanitize log details - perhaps in convert_empty
      log_info('{convert_empty(req$REMOTE_ADDR)} "{convert_empty(req$HTTP_USER_AGENT)}" {convert_empty(req$HTTP_HOST)} {convert_empty(req$REQUEST_METHOD)} {convert_empty(req$PATH_INFO)} {convert_empty(res$status)} {round(end$toc - end$tic, digits = getOption("digits", 5))}')
    }
  )
)
```

再次執行
```{r eval=FALSE}
pr$run()
```

---

<center>  <font size="8">
Thanks for your attention. </font></center>
<center>  <font size="6">
Welcome for your comments and suggestions.
</font></center>
<br><br>
<br><br>
<br><br>
<br><br>
__Tai-Chi Wang__  

Assistant Research Fellow  
National Center for High-performance Computing,  
National Applied Research Laboratories, Taiwan   
Email: taichi@narlabs.org.tw  
Webpage: [https://taichi43.wordpress.com/](https://taichi43.wordpress.com/)
